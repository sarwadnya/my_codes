#include <stdio.h>
#include <stdlib.h>
#include <limits.h>
int partition(int arr[],int l,int r)
{
	int key=arr[r];//this line is for normal quicksort
	//the following line is for randomised quicksort(better)
	//int key=(l+random()%(r-l+1));
	//key=arr[key]; swap arr[r] and arr[key] and proceed.
	int i=l-1;
	for (int j = l; j < r; j += 1)
	{
		if (arr[j]<key)
		{
			i++;
			int t=arr[j];
			arr[j]=arr[i];
			arr[i]=t;
		}
	}
	int t=arr[i+1];
	arr[i+1]=arr[r];
	arr[r]=t;
	return i+1;
}
void quick(int arr[],int l,int r)
{
	if (l<r)
	{
		int q=partition(arr,l,r);
		quick(arr,l,q-1);
		quick(arr,q+1,r);
	}
}
int main (int argc, char *argv[])
{
	int n;
	scanf("%d",&n);
	int arr[n];
	for (int i = 0; i < n; i += 1)
	{
		scanf("%d",&arr[i]);
	}
	quick(arr,0,n-1);
	for (int i = 0; i < n; i += 1)
	{
		printf("%d ",arr[i]);
	}
	return 0;
}
