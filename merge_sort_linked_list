Node* merge(Node*left,Node*right)
{
  Node*head=(Node*)malloc(sizeof(Node));
  if(left->data<=right->data)
  {
    head->data=left->data;
    left=left->next;
  }
  else
  {
    head->data=right->data;
    right=right->next;
  }
  Node*temp=head;
  while(left && right)
  {
    Node*n=(Node*)malloc(sizeof(Node));
    if(left->data<=right->data)
    {
      n->data=left->data;
    }
    else
    {
      n->data=right->data;
    }
    temp->next=n;
    temp=n;
  }
  if(left)
  temp->next=left;
  if(right)
  temp->next=right;
  return head;
}
Node* mergeSort(Node*head)
{
  if(head==NULL || head->next=NULL)
    return head;
  
  Node*temp=NULL;
  Node*slow=head;
  Node*fast=head;
  
  while(fast && fast->next)
  {
    fast=fast->next->next;
    temp=slow;
    slow=slow->next;
  }
  
  temp->next=NULL;
  
  Node*left=mergeSort(head);
  Node*right=mergeSort(slow);
  
  return merge(left,right);
  
}
